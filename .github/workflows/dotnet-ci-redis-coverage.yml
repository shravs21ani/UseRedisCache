
name: .NET 8 CI with Redis and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Wait for Redis to be ready
      run: |
        for i in {1..10}; do
          if redis-cli -h localhost ping | grep -q PONG; then
            echo "Redis is ready!"
            break
          fi
          echo "Waiting for Redis..."
          sleep 2
        done

    - name: Run Tests with Coverage
      run: |
        dotnet test --no-restore --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/Coverage/

    - name: Upload Coverage Report to GitHub Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: '**/TestResults/Coverage/coverage.cobertura.xml'

    - name: Upload to Codecov
      uses: codecov/codecov-action@v4
      with:
        # Uses the token from Repository Secrets
        token: ${{ secrets.CODECOV_TOKEN }}
        files: '**/TestResults/Coverage/coverage.cobertura.xml'
        fail_ci_if_error: true




